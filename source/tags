!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	//
Host	Host.cpp	/^Host::Host(double x, double y, double reach, int mac) $/;"	f	class:Host
Packet	Packet.cpp	/^Packet::Packet(std::string content) : content(content) {}$/;"	f	class:Packet
cast	Simulation.cpp	/^void Simulation::cast(Host *host, Packet *packet)$/;"	f	class:Simulation	typeref:typename:void
get_distance	Simulation.cpp	/^double Simulation::get_distance(Host *host_from, Host *host_to)$/;"	f	class:Simulation	typeref:typename:double
get_travel_time	Simulation.cpp	/^int Simulation::get_travel_time(Host *host_a, Host *host_b)$/;"	f	class:Simulation	typeref:typename:int
is_reachable	Simulation.cpp	/^bool Simulation::is_reachable(Host *host_from, Host *host_to)$/;"	f	class:Simulation	typeref:typename:bool
log_curr_state	Simulation.cpp	/^void Simulation::log_curr_state()$/;"	f	class:Simulation	typeref:typename:void
main	main.cpp	/^int main()$/;"	f	typeref:typename:int
read_data	Simulation.cpp	/^void Simulation::read_data(std::string file_name)$/;"	f	class:Simulation	typeref:typename:void
send	Simulation.cpp	/^void Simulation::send($/;"	f	class:Simulation	typeref:typename:void
update	Simulation.cpp	/^void Simulation::update()$/;"	f	class:Simulation	typeref:typename:void
wait	Simulation.cpp	/^void Simulation::wait(int wait_time)$/;"	f	class:Simulation	typeref:typename:void
~Simulation	Simulation.cpp	/^Simulation::~Simulation()$/;"	f	class:Simulation
